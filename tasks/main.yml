---
# Dependencies
- name: apt-get update
  apt: update_cache=yes
  ignore_errors: True
  tags:
      - install

#- name: include rvm and ruby install
#  import_tasks: ruby_rvm.yml

# Now mysql-server package is installed by dependencies
- name: install deps
  apt: 
    name: ['curl', 'git', 'git-core', 'subversion', 'imagemagick', 'libmagickwand-dev',
           'libmysqlclient-dev', 'apache2', 'apache2-dev', 'libcurl4-gnutls-dev',
           'libapache2-svn', 'libapache-dbi-perl', 'libapache2-mod-perl2', 'libdbd-mysql-perl',
           'libauthen-simple-ldap-perl', 'openssl', 'python-mysqldb']
    state: latest
  tags:
      - install

# Add the user to rvm group to allow write when installing with gem
- name: create redmine_system_user user
  user: name={{ redmine_system_user }}
        comment="redmine_system_user"
        groups=www-data,rvm
        shell=/bin/bash

- name: allow redmine user to run apt-get update
  template: dest=/etc/sudoers.d/redmine src=sudoers.d/redmine.yml

# Redmine 
- name: create redmine dir
  file: dest={{ redmine_path }}
        owner={{ redmine_system_user }}
        group={{ redmine_system_user }}
        state=directory

- name: check out redmine
  subversion: repo=https://svn.redmine.org/redmine/branches/{{ redmine_svn_version }}-stable dest={{ redmine_path }}/current
  become_user: "{{ redmine_system_user }}"

- name: set permissions on redmine dirs
  file: dest={{ item }}
        owner=www-data
        group=www-data
        state=directory
        mode=775
        recurse=yes
  with_items:
    - "{{ redmine_path }}/current/files"
    - "{{ redmine_path }}/current/log"
    - "{{ redmine_path }}/current/tmp"
    - "{{ redmine_path }}/current/public/plugin_assets"
    - "{{ redmine_path }}/repos/svn"
    - "{{ redmine_path }}/repos/git"

# - name: set permissions on redmine files
#   file: dest={{ item }}
#         owner=www-data
#         group=www-data
#         state=file
#         mode=644
#   with_items:
#     - "{{ redmine_path }}/current/files"
#     - "{{ redmine_path }}/current/log"
#     - "{{ redmine_path }}/current/tmp"
#     - "{{ redmine_path }}/current/public/plugin_assets"
#     - "{{ redmine_path }}/repos/svn"
#     - "{{ redmine_path }}/repos/git"

- name: set permissions on rdmine dirs
  file: dest={{ item }}
        owner=www-data
        group=www-data
        state=directory
        mode=775
        recurse=yes
  with_items:
    - "{{ redmine_path }}/current/log"

# - name: check if redmine db is pupulated
#   command: mysql redmine
#   register: redmine_db_status
#   changed_when: "'Unknown database' in redmine_db_status.stderr"
#   failed_when: "'Can\\'t connect to local MySQL server' in redmine_db_status.stderr"

- name: create redmine DB
  mysql_db: name=redmine
            state=present
            encoding=utf8

- name: create redmine user
  mysql_user: name=redmine
              host=localhost
              password={{ redmine_db_password }}
              priv=redmine.*:ALL,GRANT
              state=present

- name: copy DB configuration
  template: src=database.yml dest="{{ redmine_path }}/current/config/database.yml" owner="{{ redmine_system_user }}"
  notify: reload apache
  tags: config

- name: copy redmine configuration
  template: src=configuration.yml dest="{{ redmine_path }}/current/config/configuration.yml" owner="{{ redmine_system_user }}"
  notify: reload apache
  tags: config

# https://makandracards.com/makandra/9741-run-specific-version-of-bundler
# https://github.com/bundler/bundler/blob/master/doc/TROUBLESHOOTING.md
- name: Install bundler
  shell: "bash -c 'source {{ rvm_path }} && {{ item }}'"
  args:
    chdir: "{{ redmine_path }}/current"
  with_items:
    #- gem install --user-install rubygems-bundler
    - gem install {{ redmine_bundler_gem }}
    - gem install rake
  become: yes

- name: run bundler
  shell: "bash -c 'source {{ rvm_path }} && {{ item }}'"
  args:
    chdir: "{{ redmine_path }}/current"
  with_items:
    #- bundle update nokogiri
    - gem install tzinfo-data
    - bundle _{{ redmine_bundle_version }}_ update
    - bundle _{{ redmine_bundle_version }}_ install --without development test
    - RAILS_ENV=production bundle exec rake db:migrate
    - RAILS_ENV=production REDMINE_LANG=en bundle exec rake redmine:load_default_data
  become_user: "{{ redmine_system_user }}"

- name: generate new secret
  shell: "bash -c 'source {{ rvm_path }} && rake secret'"
  args:
    creates: "{{ redmine_path }}/current/config/secrets.yml"
    chdir: "{{ redmine_path }}/current"
  register: redmine_prod_secret
  become_user: "{{ redmine_system_user }}"
  tags:
    - config

- name: redmine secret conf
  template: dest="{{ redmine_path }}/current/config/secrets.yml" owner="{{ redmine_system_user }}"
            src=secrets.yml
  when: redmine_prod_secret.changed
  tags:
    - config
### End redmine

# Apache
- name: enable apache modules
  apache2_module: state=present name={{ item }}
  with_items:
    - perl
    - dav
    - dav_svn
    - dav_fs
    - rewrite

- name: install passenger
  shell: "bash -c 'source {{ rvm_path }} && {{ item }}'"
  args:
    chdir: "{{ redmine_path }}/current"
  with_items:
    - gem install passenger
    - gem update --system --no-ri --no-rdoc
    - passenger-install-apache2-module -a --languages ruby
  become_user: "{{ redmine_system_user }}"
  tags: debug
  # ignore_errors: true
  register: result

- debug: var=result
  tags: debug

- include: passenger.12.04.yml
  when: "ansible_distribution == 'Ubuntu' and ansible_distribution_version == '12.04'"

- include: passenger.14.04.yml
  when: "ansible_distribution == 'Ubuntu' and ansible_distribution_version == '14.04'"

- include: passenger.16.04.yml
  when: "ansible_distribution == 'Ubuntu' and ansible_distribution_version == '16.04'"

#  Perl for Apache
- name: link Redmine.pm
  file: state=link src=/opt/redmine/current/extra/svn/Redmine.pm dest=/usr/lib/perl5/Apache/Redmine.pm
  notify: reload apache
  tags:
    - config

- name: link apache2 Redmine.pm
  file: state=link src=/opt/redmine/current/extra/svn/Redmine.pm dest=/usr/lib/perl5/Apache2/Redmine.pm
  notify: reload apache
  tags:
    - config

- name: redmine apache conf
  template: dest=/etc/apache2/sites-available/redmine.conf src=apache/redmine.conf.jinja
  notify: reload apache
  tags:
    - config

- name: enable redmine apache lxc config
  file: state=link src=../sites-available/redmine.conf dest=/etc/apache2/sites-enabled/redmine.conf
  notify: reload apache
  tags:
    - config

- name: redmine apache conf
  template: dest=/etc/apache2/mods-available/redmine.load src=apache/redmine.load.jinja
  notify: reload apache
  tags:
    - config

- name: upload apache ports conf
  template: dest=/etc/apache2/ports.conf src=apache/ports.conf
  notify: reload apache
  when: replace_apache_ports_conf
  tags:
    - config

- name: enable apache redmine module
  apache2_module: state=present name=redmine
  ignore_errors: yes

- name: Delete default apache conf
  file: dest=/etc/apache2/sites-enabled/000-default.conf
        state=absent
  notify: apache reload
  when: apache_no_default
  tags:
    - config
### End apache
